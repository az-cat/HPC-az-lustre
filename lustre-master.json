{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "Master VMSS name."
      },
      "maxLength": 15
    },
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_F1s",
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32s"
      ],
      "metadata": {
        "description": "sku to use for the storage nodes - only premium disks VMs are allowed"
      }
    },
    "VMImage": {
      "type": "string",
      "defaultValue": "CentOS_7.3",
      "allowedValues": [
        "CentOS_7.3"
      ],
      "metadata": {
        "description": "VM Image."
      }
    },   
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "storageDiskSize": {
      "type": "string",
      "defaultValue": "P30",
      "allowedValues": [
        "P10",
        "P20",
        "P30"
      ],
      "metadata": {
        "description": "Premium storage disk size used for the storage services"
      }
    },
    "StorageDisksCount": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 0,
      "maxValue": 1,
      "metadata": {
        "description": "Number of storage disks"
      }
    }
  },
  "variables": {
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "virtualNetworkName": "lustre-vnet",
    "vmsscount": 2,
    "vmssNameVolume": "[concat(parameters('vmssName'), 'last')]",
    "vmssCountVolume": 1,
    "jumpboxName": "lustrejumpbox",
    "subnetName": "lustre-subnet",
    "storageDiskSize": "[variables('PremiumStorageMap')[parameters('storageDiskSize')].size]",
    "numStorageDisks": "[parameters('storageDisksCount')]",
    "numMetadataDisks": 0,
    "nicName": "[concat(parameters('vmssName'), 'nic')]",
    "ipConfigName": "[concat(parameters('vmssName'), 'ipconfig')]",
    "networkApiVersion": "2016-06-01",
    "insightsApiVersion": "2015-04-01",
    "location": "[resourceGroup().location]",
    "installLIS": "bash InstallLIS.sh",    
    "PremiumStorageMap": {
      "P10": {
        "size": 128
      },
      "P20": {
        "size": 512
      },
      "P30": {
        "size": 1023
      }
    },
    "image": "[parameters('VMImage')]",
    "lustreNodeSettings": {
      "VMsku": "[parameters('VMSize')]",
      "storageDiskSize": "[variables('PremiumStorageMap')[parameters('storageDiskSize')].size]",
      "numStorageDisks": "[parameters('storageDisksCount')]",
      "numStorageDisksLast": 1,
      "numMetadataDisks": 0
    },
    "computeNodeImages": {
      "CentOS_7.3": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "7.3",
        "version": "latest"
      },
      "CentOS_7.2": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "7.2",
        "version": "latest"
      },
      "RHEL_7.3": {
        "publisher": "RedHat",
        "offer": "RHEL",
        "sku": "7.2",
        "version": "latest"
      }
    },
    "nodeOSSettings": {
      "adminUserName": "[parameters('adminUserName')]",
      "sshKeyData": "[parameters('sshKeyData')]",
      "imageReference": "[variables('computeNodeImages')[variables('image')]]"
    },
    "computeApiVersion": "2016-04-30-preview",
    "sshKeyPath": "[concat('/home/',variables('nodeOSSettings').adminUserName,'/.ssh/authorized_keys')]",
    "storageDiskArray": [
      {
        "diskSizeGB": "[variables('lustreNodeSettings').storageDiskSize]",
        "lun": "[add(variables('lustreNodeSettings').numMetadataDisks, 0)]",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('lustreNodeSettings').storageDiskSize]",
        "lun": "[add(variables('lustreNodeSettings').numMetadataDisks, 1)]",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('lustreNodeSettings').storageDiskSize]",
        "lun": "[add(variables('lustreNodeSettings').numMetadataDisks, 2)]",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('lustreNodeSettings').storageDiskSize]",
        "lun": "[add(variables('lustreNodeSettings').numMetadataDisks, 3)]",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('lustreNodeSettings').storageDiskSize]",
        "lun": "[add(variables('lustreNodeSettings').numMetadataDisks, 4)]",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('lustreNodeSettings').storageDiskSize]",
        "lun": "[add(variables('lustreNodeSettings').numMetadataDisks, 5)]",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('lustreNodeSettings').storageDiskSize]",
        "lun": "[add(variables('lustreNodeSettings').numMetadataDisks, 6)]",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('lustreNodeSettings').storageDiskSize]",
        "lun": "[add(variables('lustreNodeSettings').numMetadataDisks, 7)]",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('lustreNodeSettings').storageDiskSize]",
        "lun": "[add(variables('lustreNodeSettings').numMetadataDisks, 8)]",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[variables('lustreNodeSettings').storageDiskSize]",
        "lun": "[add(variables('lustreNodeSettings').numMetadataDisks, 9)]",
        "createOption": "Empty"
      }
    ]
  },
  "resources": [
    { "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "apiVersion": "[variables('networkApiVersion')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    }, 
    {"type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('jumpboxName'),'pip')]",
      "apiVersion": "[variables('networkApiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(substring(concat(parameters('jumpboxName'), uniqueString(resourceGroup().id)), 0, 9))]"
        }
      }
    },
    { "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('jumpboxName'),'nic')]",
      "apiVersion": "[variables('networkApiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [{
          "name": "[concat(variables('jumpboxName'),ipconfig)]",
          "properties": {
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "[resourceId('Microsoft.Network/publicIPAddresses/',variables('jumpboxName'),'pip')]"
            },
            "subnet": {
              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
            }
          }
        }]
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxName'),'pip')]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ]
    },
    { "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('jumpboxName')]",
      "apiVersion": "[variables('computeApiVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D12_v2"
        },
        "osProfile": {
          "computerName": "[variables('jumpboxName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[variables('nodeOSSettings').sshKeyData]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('nodeOSSettings').imageReference]",
          "osDisk": {
            "name": "[concat(variables('jumpboxName'), 'disk')]",Â 
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [{
            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('jumpboxName'),'nic')]"
          }]
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('jumpboxName'),'nic')]"
      ]
    },
    { "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('vmssName')]",
      "location": "[variables('location')]",
      "apiVersion": "[variables('computeApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "sku": {
        "name": "[variables('lustreNodeSettings').VMsku]",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "overprovision": "false",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "imageReference": "[variables('nodeOSSettings').imageReference]",
            "dataDisks": "[concat(take(variables('storageDiskArray'),variables('lustreNodeSettings').numStorageDisks))]"
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[variables('sshKeyPath')]",
                    "keyData": "[variables('nodeOSSettings').sshKeyData]"
                  }
                ]
              }
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "lapextension",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[uri(deployment().properties.templateLink.uri, 'scripts/master-setup.sh')]",
                      "[uri(deployment().properties.templateLink.uri, 'scripts/install_lustre.sh')]"
                    ],
                    "commandToExecute": "[concat('bash master-setup.sh ',variables('nodeOSSettings').adminUserName,';','bash install_lustre.sh ', 'meta',' ','https://raw.githubusercontent.com/tanewill/azhpc_lustre/master/scripts')]"
                  }
                }
              }
            ]
          }
        }
      }
    }

  ]
}